const cron = require('node-cron');
const { scrapeAvito } = require('../parser/scraper');
const { getFilters, adExists, saveAd } = require('../db/queries');
const bot = require('../bot/index');

// –ö–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
cron.schedule('*/10 * * * *', async () => {
  console.log('‚è± –ó–∞–ø—É—Å–∫ cron-–∑–∞–¥–∞—á–∏: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤');

  try {
    const filters = await getFilters();

    for (const filter of filters) {
      console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞: "${filter.keyword}", –¥–æ ${filter.max_price}‚ÇΩ, —Ä–µ–≥–∏–æ–Ω: ${filter.region}`);

      const ads = await scrapeAvito(filter.keyword, filter.max_price, filter.region);
      console.log(`üîé –ù–∞–π–¥–µ–Ω–æ ${ads.length} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ —Ñ–∏–ª—å—Ç—Ä—É "${filter.keyword}"`);

      for (const ad of ads) {
        const exists = await adExists(ad.url);
        if (!exists) {
          await saveAd(ad, filter.id);
          console.log(`üì§ –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${filter.telegram_id}: ${ad.url}`);

          await bot.sendMessage(
            filter.telegram_id,
            `üîé –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ:\n\n<b>${ad.title}</b>\nüí∞ <b>${ad.price}‚ÇΩ</b>\nüìç ${ad.location}\nüëâ <a href="${ad.url}">–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</a>`,
            { parse_mode: 'HTML' }
          );
        }
      }
    }
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ cron-–∑–∞–¥–∞—á–∏:', err);
  }
});
